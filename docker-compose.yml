version: '3'
#docker-compose -f ./docker-compose.yml up or docker-compose up
name: python-vector-tools-docker
services:
  
  # docker run -d --rm --name chromadb -p 8000:8000 -v ./chroma_db_path:/chroma/chroma -e IS_PERSISTENT=TRUE -e ANONYMIZED_TELEMETRY=TRUE chromadb/chroma:latest
  # curl http://localhost:8000/api/v2/heartbeat
  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - ./Langchain/chroma_data:/chroma/.chroma/index
    ports:
      - 8000:8000
    networks:
      - bridge

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8089:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - ~/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      
  fn-es8:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: fn-es8
    environment:
      - http.host=0.0.0.0
      - node.name=fn-dm-bees-omni-data-01
      - node.roles=[data, master]
      - cluster.name=docker-elasticsearch
      - cluster.initial_master_nodes=fn-dm-bees-omni-data-01
      - discovery.seed_hosts=fn-dm-bees-omni-data-01
      - cluster.routing.allocation.disk.threshold_enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=basic
      - action.destructive_requires_name=false
      - http.port=9202
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9202:9202
    networks:
      - bridge

  fn-kibana8:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: fn-kibana8
    environment:
     ELASTICSEARCH_HOSTS: http://fn-es8:9202
     SERVER_HOSTS: 0.0.0.0
    ports:
      - 25601:5601
    networks:
      - bridge    
    depends_on:
      - fn-es8

  fn-vector-omni_es_8:
    image: fn-vector-omni_es_8:omni_es
    container_name: fn-vector-omni_es_8
    build:
      context: .
      dockerfile: Dockerfile
      target: omni_es
    ports:
      - 9202:9202
    # restart: unless-stopped
    environment:
      # v_7
      # - node.name=fn-dm-bees-omni-data-01
      # - discovery.type=single-node
      # - http.port=9201
      # - http.cors.enabled=true
      # - http.cors.allow-origin=* 
      # - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      # - http.cors.allow-credentials=true
      # - xpack.security.enabled=false
      # - bootstrap.system_call_filter=false
      # - ES_JAVA_OPTS=-Xms1g -Xmx1g
      
      # v_8
      - http.host=0.0.0.0
      - node.name=fn-dm-bees-omni-data-01
      - node.roles=[data, master]
      - cluster.name=docker-elasticsearch
      - cluster.initial_master_nodes=fn-dm-bees-omni-data-01
      - discovery.seed_hosts=fn-dm-bees-omni-data-01
      - cluster.routing.allocation.disk.threshold_enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=basic
      - action.destructive_requires_name=false
      - http.port=9202
      - reindex.remote.whitelist=${NODE_WHITE_LIST}
    volumes:
      - data:/usr/share/elasticsearch/data
      - ./Docker/elasticsearch/backup:/usr/share/elasticsearch/backup
      - ./Docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9202/_cat/health"]
    networks:
      - bridge
  
  
  fn-vector-basic-kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: fn-vector-basic-kibana
    ports:
      - 15601:5601
    networks:
      - bridge
    depends_on:
      - fn-vector-omni_es_8
    environment:
      ELASTICSEARCH_HOSTS: http://fn-vector-omni_es_8:9202
  
      
  fn-vector-basic-api:
    image: fn-vector-basic-api:es
    container_name: fn-vector-basic-api
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    ports:
      - 15555:5555
    volumes:
      - ./:/app/FN-Vector-Services
    restart: unless-stopped
    environment:
      - ES_HOST=http://host.docker.internal:9201
    networks:
      - bridge
      
  fn-vector-basic-api-test:
    image: fn-vector-basic-api:test
    container_name: fn-vector-basic-api-test
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    ports:
      - 15556:5555
    volumes:
      - ./:/app/FN-Vector-Services
    # restart: unless-stopped
    environment:
      - ES_HOST=http://host.docker.internal:9201
    networks:
      - bridge
      
volumes:
  data:
    driver: local
    
networks:
  bridge:
    driver: bridge